1. Arrays

    Dynamic Array (Resizable array)
    Array Rotations
    Searching Algorithms
        Linear Search
        Binary Search (on sorted arrays)
    Sorting Algorithms
        Bubble Sort
        Selection Sort
        Insertion Sort
        Merge Sort
        Quick Sort
        Heap Sort
    Array Manipulations
        Reversal of Array
        Finding Maximum/Minimum Elements
        Finding Pair with Given Sum

2. Linked Lists

    Singly Linked List
        Insertion (at beginning, at end, at position)
        Deletion (from beginning, from end, from position)
        Reversing a Linked List
        Finding the middle element
        Detecting Cycle in Linked List (Floyd’s Tortoise and Hare Algorithm)
    Doubly Linked List
        Insertion and Deletion at both ends
        Traversing in both directions
    Circular Linked List
        Insertion and Deletion in circular lists
    Merge Two Sorted Linked Lists

3. Stacks and Queues

    Stack Implementation (using arrays or linked lists)
        Push, Pop, Top operations
        Check if stack is empty or full
        Implementing Stack using two Queues
    Queue Implementation (using arrays or linked lists)
        Enqueue, Dequeue operations
        Circular Queue implementation
        Priority Queue (with or without heap)
    Expression Evaluation using Stack (Infix to Postfix conversion, evaluating Postfix expressions)

4. Trees

    Binary Tree
        Insertion, Traversals (Preorder, Inorder, Postorder)
        Height of Tree
        Level Order Traversal (using Queue)
        Finding Diameter of Binary Tree
        Counting Nodes at a Given Level
    Binary Search Tree (BST)
        Insertion, Deletion, Search operations
        Find Minimum/Maximum in a BST
        Find Successor and Predecessor
        Balanced BST (AVL Tree or Red-Black Tree)
    Heap
        Max Heap and Min Heap Implementation
        Heap Sort Algorithm
        Priority Queue Implementation using Heap
    Trie (Prefix Tree)
        Insert, Search, and Delete operations
    Segment Tree (for range queries like sum, minimum, maximum, etc.)
    Fenwick Tree (Binary Indexed Tree)

5. Graphs

    Graph Representation
        Adjacency Matrix
        Adjacency List
    Graph Traversal Algorithms
        Depth First Search (DFS) (Recursive and Iterative)
        Breadth First Search (BFS)
    Shortest Path Algorithms
        Dijkstra’s Algorithm (Single-source shortest path)
        Bellman-Ford Algorithm
        Floyd-Warshall Algorithm (All-pairs shortest path)
    Topological Sorting
        Kahn’s Algorithm (BFS-based)
    Minimum Spanning Tree Algorithms
        Kruskal’s Algorithm
        Prim’s Algorithm
    Detecting Cycles in Graph
        Directed Graph (DFS-based)
        Undirected Graph (Union-Find)
    Graph Coloring Problem

6. Hashing

    Hash Table Implementation
        Chaining (using Linked Lists)
        Open Addressing (Linear Probing, Quadratic Probing)
    Hash Map (Dictionary) Implementation
    Finding Duplicate Elements using Hashing
    Count Frequencies of Elements in an Array using Hashing

7. Sorting and Searching Algorithms

    Merge Sort (Divide and Conquer)
    Quick Sort (Divide and Conquer)
    Radix Sort (for integers)
    Counting Sort
    Bucket Sort
    Heap Sort
    Binary Search Tree Sort
    Find Kth Largest/Smallest Element

8. Dynamic Programming

    Knapsack Problem (0/1 Knapsack)
    Longest Common Subsequence (LCS)
    Longest Increasing Subsequence (LIS)
    Matrix Chain Multiplication
    Fibonacci Sequence (Memoization and Tabulation)
    Coin Change Problem
    Subset Sum Problem
    Palindrome Partitioning
    Rod Cutting Problem

9. Greedy Algorithms

    Fractional Knapsack Problem
    Activity Selection Problem
    Huffman Coding (for data compression)
    Job Sequencing Problem

10. Backtracking Algorithms

    N-Queens Problem
    Sudoku Solver
    Subset Sum Problem (using Backtracking)
    Permutations and Combinations
    Rat in a Maze Problem
    Hamiltonian Path/Cycle Problem

11. Bit Manipulation

    Check if a number is Power of Two
    Count Set Bits (Hamming Weight)
    Find the XOR of all numbers in a range
    Bitwise operations (AND, OR, XOR, NOT, SHIFT)
    Reverse Bits of a number
    Find the Missing Number in an Array using XOR

12. Mathematical Algorithms

    Sieve of Eratosthenes (for finding prime numbers)
    Euclidean Algorithm (for GCD)
    Extended Euclidean Algorithm (for solving linear Diophantine equations)
    Fermat’s Little Theorem (for prime number testing)
    Modular Exponentiation
    Primality Test (Naive, Miller-Rabin)

